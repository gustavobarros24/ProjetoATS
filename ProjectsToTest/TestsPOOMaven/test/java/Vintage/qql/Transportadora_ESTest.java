/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 04 15:35:45 GMT 2025
 */

package Vintage.qql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Vintage.qql.Encomenda;
import Vintage.qql.Transportadora;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Transportadora_ESTest extends Transportadora_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", 0.0F, 0.0F, (-3376.0F), 0.0F, (-1163.562F));
      float float0 = transportadora0.getValorExpEncPeq();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((-1163.562F), transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals((-3376.0F), transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("\"d 4c',}231([", 982.8F, 982.8F, (-2960.7F), (-2960.7F), 982.8F);
      transportadora0.setValorExpEncPeq((-2.57637376E9F));
      float float0 = transportadora0.getValorExpEncPeq();
      assertEquals((-2.57637376E9F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("(VB * MLT * (1 + I)) * 0.9", 298.3F, 298.3F, 298.3F, 298.3F, 2481.866F);
      float float0 = transportadora0.getValorExpEncMed();
      assertEquals(2481.866F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(298.3F, transportadora0.getImposto(), 0.01F);
      assertEquals(298.3F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(298.3F, float0, 0.01F);
      assertEquals(298.3F, transportadora0.getValorExpEncGra(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      
      transportadora0.setValorExpEncMed((-1.0F));
      float float0 = transportadora0.getValorExpEncMed();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      float float0 = transportadora0.getValorExpEncGra();
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("^/29<af$|F;a>ec5Dmo", 0.0F, 0.0F, 239.6015F, (-1.0F), (-1.0F));
      float float0 = transportadora0.getValorExpEncGra();
      assertEquals((-1.0F), transportadora0.getMargemLucro(), 0.01F);
      assertEquals(239.6015F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncPeq(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora((String) null, 1609.17F, 1149.0F, 1149.0F, 1149.0F, 1839.21F);
      transportadora0.getNome();
      assertEquals(1609.17F, transportadora0.getImposto(), 0.01F);
      assertEquals(1839.21F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(1149.0F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(1149.0F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(1149.0F, transportadora0.getValorExpEncMed(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", 0.0F, 971.33716F, 971.33716F, 0.5F, 0.0F);
      transportadora0.getNome();
      assertEquals(0.5F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(971.33716F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(971.33716F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("3^:lD[]pX", 0.0F, 0.0F, 5606.458F, 0.0F, 0.0F);
      transportadora0.setMargemLucro(1729.6F);
      float float0 = transportadora0.getMargemLucro();
      assertEquals(1729.6F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("X(D{}aOj/dkn&}t`2J", 0.0F, (-637.96F), 0.0F, 3842.593F, (-530.87164F));
      float float0 = transportadora0.getMargemLucro();
      assertEquals(3842.593F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals((-530.87164F), float0, 0.01F);
      assertEquals((-637.96F), transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setLucroEfetivo(2.06375F);
      float float0 = transportadora0.getLucroEfetivo();
      assertEquals(2.06375F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("\"d 4c',}231([", 982.8F, 982.8F, (-2960.7F), (-2960.7F), 982.8F);
      transportadora0.setLucroEfetivo((-168.0F));
      float float0 = transportadora0.getLucroEfetivo();
      assertEquals((-168.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora((String) null, 1609.17F, 1149.0F, 1149.0F, 1149.0F, 1839.21F);
      float float0 = transportadora0.getImposto();
      assertEquals(1609.17F, float0, 0.01F);
      assertEquals(1149.0F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(1149.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(1149.0F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(1839.21F, transportadora0.getMargemLucro(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setImposto((-2693.809F));
      float float0 = transportadora0.getImposto();
      assertEquals((-2693.809F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", 0.0F, 971.33716F, 971.33716F, 0.5F, 0.0F);
      transportadora0.setFormula((String) null);
      transportadora0.getFormula();
      assertEquals(971.33716F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(971.33716F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.5F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setFormula("");
      transportadora0.getFormula();
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncGra(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", (-2201.9695F), (-5201.4443F), (-5201.4443F), 1196.43F, 0.0F);
      Transportadora transportadora1 = transportadora0.clone();
      assertEquals(1196.43F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals((-5201.4443F), transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals((-5201.4443F), transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals((-2201.9695F), transportadora1.getImposto(), 0.01F);
      assertEquals(1196.43F, transportadora1.getValorExpEncGra(), 0.01F);
      assertEquals((-5201.4443F), transportadora1.getValorExpEncPeq(), 0.01F);
      assertEquals((-5201.4443F), transportadora1.getValorExpEncMed(), 0.01F);
      assertEquals((-2201.9695F), transportadora0.getImposto(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("Vintage.qql.Encomenda$TamanhoEmbalagem", 1.0F, 1.0F, 2266.0F, (-1474.5691F), (-911.7629F));
      Transportadora transportadora1 = transportadora0.clone();
      assertEquals(1.0F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals((-911.7629F), transportadora0.getMargemLucro(), 0.01F);
      assertEquals((-1474.5691F), transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals((-911.7629F), transportadora1.getMargemLucro(), 0.01F);
      assertEquals((-1474.5691F), transportadora1.getValorExpEncGra(), 0.01F);
      assertEquals(2266.0F, transportadora1.getValorExpEncMed(), 0.01F);
      assertEquals(2266.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(1.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(1.0F, transportadora1.getValorExpEncPeq(), 0.01F);
      assertEquals(1.0F, transportadora1.getImposto(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora((String) null, 1609.17F, 1149.0F, 1149.0F, 1149.0F, 1839.21F);
      transportadora0.setLucroEfetivo(1068.776F);
      transportadora0.clone();
      assertEquals(1068.776F, transportadora0.getLucroEfetivo(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", 323.8F, 323.8F, 0.0F, 0.0F, 0.0F);
      transportadora0.setLucroEfetivo((-1743.8328F));
      transportadora0.clone();
      assertEquals((-1743.8328F), transportadora0.getLucroEfetivo(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("X(D{}aOj/dkn&}t`2J", 0.0F, (-637.96F), 0.0F, 3842.593F, (-530.87164F));
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      
      Encomenda.TamanhoEmbalagem encomenda_TamanhoEmbalagem0 = Encomenda.TamanhoEmbalagem.MEDIO;
      transportadora0.setValorExpEncMed((-530.87164F));
      float float0 = transportadora0.calculaPrecoExpedicao(encomenda_TamanhoEmbalagem0);
      assertEquals(253642.23F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setFormula("w");
      Encomenda.TamanhoEmbalagem encomenda_TamanhoEmbalagem0 = Encomenda.TamanhoEmbalagem.PEQUENO;
      // Undeclared exception!
      try { 
        transportadora0.calculaPrecoExpedicao(encomenda_TamanhoEmbalagem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown function or variable 'w' at pos 0 in expression 'w'
         //
         verifyException("net.objecthunter.exp4j.tokenizer.Tokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      Encomenda.TamanhoEmbalagem encomenda_TamanhoEmbalagem0 = Encomenda.TamanhoEmbalagem.GRANDE;
      transportadora0.setFormula(")Nw|Tx3j**4#y");
      // Undeclared exception!
      try { 
        transportadora0.calculaPrecoExpedicao(encomenda_TamanhoEmbalagem0);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setFormula(".A.Bbk(hKlD/GnrH");
      Encomenda.TamanhoEmbalagem encomenda_TamanhoEmbalagem0 = Encomenda.TamanhoEmbalagem.MEDIO;
      // Undeclared exception!
      try { 
        transportadora0.calculaPrecoExpedicao(encomenda_TamanhoEmbalagem0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setFormula("");
      Encomenda.TamanhoEmbalagem encomenda_TamanhoEmbalagem0 = Encomenda.TamanhoEmbalagem.PEQUENO;
      // Undeclared exception!
      try { 
        transportadora0.calculaPrecoExpedicao(encomenda_TamanhoEmbalagem0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expression can not be empty
         //
         verifyException("net.objecthunter.exp4j.ExpressionBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Transportadora transportadora0 = null;
      try {
        transportadora0 = new Transportadora((Transportadora) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage.qql.Transportadora", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", (-2201.9695F), (-5201.4443F), (-5201.4443F), 1196.43F, 0.0F);
      float float0 = transportadora0.getMargemLucro();
      assertEquals(1196.43F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((-2201.9695F), transportadora0.getImposto(), 0.01F);
      assertEquals((-5201.4443F), transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals((-5201.4443F), transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", (-1078.9052F), 2950.8672F, 0.0F, 2950.8672F, 1.0F);
      float float0 = transportadora0.getValorExpEncPeq();
      assertEquals(2950.8672F, float0, 0.01F);
      assertEquals(1.0F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(2950.8672F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals((-1078.9052F), transportadora0.getImposto(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", 0.0F, 971.33716F, 971.33716F, 0.5F, 0.0F);
      transportadora0.getFormula();
      assertEquals(971.33716F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(971.33716F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.5F, transportadora0.getValorExpEncGra(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("X(D{}aOj/dkn&}t`2J", 0.0F, (-637.96F), 0.0F, 3842.593F, (-530.87164F));
      float float0 = transportadora0.getValorExpEncGra();
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals((-637.96F), transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(3842.593F, float0, 0.01F);
      assertEquals((-530.87164F), transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("", 0.0F, 971.33716F, 971.33716F, 0.5F, 0.0F);
      Transportadora transportadora1 = new Transportadora(transportadora0);
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(971.33716F, transportadora1.getValorExpEncMed(), 0.01F);
      assertEquals(971.33716F, transportadora1.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.5F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.5F, transportadora1.getValorExpEncGra(), 0.01F);
      assertEquals(971.33716F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(971.33716F, transportadora0.getValorExpEncPeq(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora((String) null, 0.0F, 0.0F, 0.0F, 0.0F, 5575.37F);
      float float0 = transportadora0.getLucroEfetivo();
      assertEquals(5575.37F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("(VB * MLT * (1 + I)) * 0.9", 298.3F, 298.3F, 298.3F, 298.3F, 2481.866F);
      transportadora0.getNome();
      assertEquals(298.3F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(298.3F, transportadora0.getImposto(), 0.01F);
      assertEquals(2481.866F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(298.3F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(298.3F, transportadora0.getValorExpEncMed(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora((String) null, 0.0F, 0.0F, 0.0F, 0.0F, 5575.37F);
      float float0 = transportadora0.getValorExpEncMed();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(5575.37F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      float float0 = transportadora0.getImposto();
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      Encomenda.TamanhoEmbalagem encomenda_TamanhoEmbalagem0 = Encomenda.TamanhoEmbalagem.PEQUENO;
      float float0 = transportadora0.calculaPrecoExpedicao(encomenda_TamanhoEmbalagem0);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncPeq(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      assertEquals("(VB * MLT * (1 + I)) * 0.9", transportadora0.getFormula());
      
      Encomenda.TamanhoEmbalagem encomenda_TamanhoEmbalagem0 = Encomenda.TamanhoEmbalagem.GRANDE;
      float float0 = transportadora0.calculaPrecoExpedicao(encomenda_TamanhoEmbalagem0);
      assertEquals(0.0F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setNome("PEx Z");
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncPeq(), 0.01F);
      assertEquals("(VB * MLT * (1 + I)) * 0.9", transportadora0.getFormula());
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncGra(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      Transportadora transportadora1 = transportadora0.clone();
      assertEquals(0.0F, transportadora0.getMargemLucro(), 0.01F);
      assertEquals(0.0F, transportadora0.getImposto(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals("(VB * MLT * (1 + I)) * 0.9", transportadora1.getFormula());
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncMed(), 0.01F);
      assertEquals(0.0F, transportadora0.getValorExpEncPeq(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora("3^:lD[]pX", (-13.637163F), (-13.637163F), (-13.637163F), (-13.637163F), (-13.637163F));
      assertEquals("(VB * MLT * (1 + I)) * 0.9", transportadora0.getFormula());
      
      Encomenda.TamanhoEmbalagem encomenda_TamanhoEmbalagem0 = Encomenda.TamanhoEmbalagem.MEDIO;
      float float0 = transportadora0.calculaPrecoExpedicao(encomenda_TamanhoEmbalagem0);
      assertEquals((-2115.1453F), float0, 0.01F);
      assertEquals((-13.637163F), transportadora0.getValorExpEncGra(), 0.01F);
      assertEquals(0.0F, transportadora0.getLucroEfetivo(), 0.01F);
      assertEquals((-13.637163F), transportadora0.getValorExpEncPeq(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Transportadora transportadora0 = new Transportadora();
      transportadora0.setValorExpEncGra((-56.344078F));
      assertEquals((-56.344078F), transportadora0.getValorExpEncGra(), 0.01F);
  }
}
